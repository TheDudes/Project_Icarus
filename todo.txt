+-----------------------------------------------------------------------------+
| +-------------------------------------------------------------------------+ |
| |                                 TODO                                    | |
| +-------------------------------------------------------------------------+ |
+-----------------------------------------------------------------------------+

-------------------------------------------------------------------------------
all:

[ !! ]  -> import Icarus.Main;  ->  log.message -> Main.exit();
[    ]  -> java api for io manager
[done]  -> fix most of the warnings
[done]  -> get interpreter to run
-------------------------------------------------------------------------------
linc/tux/d4ryus:

[ !! ]  -> go through all config values and set their default
-------------------------------------------------------------------------------
linc:

[ !! ]  -> takt_frequenzy is string now
[ !! ]  -> if new_takt_frequenzy is set to number only, cast exception on
           get_string() function from config_Reader (integer cannot be casted
           to java.lang.string, or something like that)
        -> add Log_keywords
        -> add engine keywords
        -> maybe source option for multiple files
        -> config key - to show/hide values
[ !! ]  -> update example_config
[done]  -> check for possible wrong values and print error
-------------------------------------------------------------------------------
csb/linc:

[ !! ]  -> change ERROR messages on system exit
[done]  -> if there is a kill() with lbq/socket, throw him a bone
[done]  -> kill()
[done]  -> get IO to work
-------------------------------------------------------------------------------
linc/tux:

        -> lib feature maybe
        -> fix all warnings
-------------------------------------------------------------------------------
tux/d4ryus:

[done]  -> implement timer
-------------------------------------------------------------------------------
tux:

[ !! ]  -> exception handling
        -> String implementation for values
        -> fix exception throwing
        -> add newlines to ur ERROR messages. double newline on end
[done]  -> String " ... " implementation for PRINT function
[done]  -> log bug: no ' []: ' on parser-MergeFiles (verb. lvl 4)
[done]  -> fix bug with replacing true on for loop
[done]  -> log bug: called parser-ParserContainer
[done]  -> implement case
[done]  -> fix case on ELSE or END_CASE
[done]  -> implement functions
[done]  -> implement new log
[done]  -> implement Error
-------------------------------------------------------------------------------
d4ryus:

[ !! ]  -> fixme on Exceptions which are thrown by parser
[ !! ]  -> awesome print functions with "info dump"
[ !! ]  -> awesome print function of a value that changed to be nsa 2.0
        -> check how function returning works
        -> create error message, then print
        -> make list of stuff we can do now
        -> make list of stuff we cannot do
[done]  -> flag to turn on/off time display
[done]  -> fix exception at keyword_handler, string.indexOf
[done]  -> fixme/Exception handling
[done]  -> awesome status print of average takt after 1/5/10 min etc
[done]  -> remove timestamp on logfiles, just print one on startup
[done]  -> list of config keys with their possible values
[done]  -> specify Hz Hertz MHz MegaHertz KHz and KiloHertz, also ms. (well its
           hz/Hz and ms now, since Mega and Kilo makes no sense.
[done]  -> flag for print function to print on stdio
[done]  -> fix bug with queue size not displaying right
[done]  -> add something like a "goto exit" to cleanup all threads
[done]  -> change log keys
[done]  -> implement takt_frequency
[done]  -> fix bug with only one log file
[done]  -> fix engine warmup count
[done]  -> add flag for showing statusbar
[done]  -> if no log backup is specified log to the same file
[done]  -> fix exception with lowercase letters on log size
[done]  -> add oportunity to specify log file size with full names
[done]  -> add error message for log file size
[done]  -> add error message to log
[done]  -> functions with return value
[done]  -> string "" implementation for PRINT method
[done]  -> implement ERROR messages
[done]  -> fix error message on Engine code
[done]  -> remove unused branches
[done]  -> move not need files from branches up to root branch
[done]  -> fix all warnings
[done]  -> fix all imports to be in the same order
[done]  -> add log.exit to all system.exit
[done]  -> fix statusbar now showing 100%
[done]  -> make list of all warnings
[meet]  -> try out new logging method
-------------------------------------------------------------------------------
else:

        -> verbosity 0: error and startup
                     1: PRINT messages, on terminal?
                     2: init of objects?
                     3: even more
                     4: fucking everything
[done]  -> change all logs to non deprecated version!
-------------------------------------------------------------------------------


-------------------------------------------------------------------------------
just information from here:
-------------------------------------------------------------------------------
function-declaration------------
FUNCTION [name] : [type of return value]
    VAR
        [var code]
    END_VAR
    [function code]
END_FUNCTION
example-function----------------
FUNCTION SIMPLE_FUN : REAL
    VAR_INPUT
        A : REAL;
        B : REAL;
        C : REAL := 1.0;
    END_VAR
    VAR_IN_OUT
        COUNT : INT;
    END_VAR
    VAR
        COUNTP! : INT;
    END_VAR
    /* wtf is this shit btw? add? fuck you... */
    COUNTP1 := ADD(COUNT,1);
    /* better go for COUNTP1 := COUNT + 1; */
    COUNT   := COUNTP1;
    SIMPLE_FUN := A*B/C;
END_FUNCTION
end-example-function------------
-------------------------------------------------------------------------------
