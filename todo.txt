-----------------------------------------------------------------------------+
| +------------------------------------------------------------------------+ |
| | +--------------------------------------------------------------------+ | |
| | | +----------------------------------------------------------------+ | | |
| | | | +------------------------------------------------------------+ | | | |
| | | | |                           TODO                             | | | | |
| | | | +------------------------------------------------------------+ | | | |
| | | +----------------------------------------------------------------+ | | |
| | +--------------------------------------------------------------------+ | |
| +------------------------------------------------------------------------+ |
+----------------------------------------------------------------------------+
linc - Config_Reader -> add Log_keywords
                     -> add engine keywords
                     -> maybe source option for multiple files
                     -> config key - to show/hide values
------------------------------------------------------------------------------
all -> change ERROR messages on system exit
    -> add log.kill b4 System.exit to clean up
    -> verbosity 0: error and startup
                 1: PRINT messages, on terminal?
                 2: init of objects?
                 3: even more
                 4: fucking everything
    -> if there is a kill() with lbq, throw him a bone
------------------------------------------------------------------------------
tux -> String " ... " implementation for PRINT function
    -> log key parser parser
    -> log key buggy (no [])
------------------------------------------------------------------------------
me  -> functions with return value
    -> make list of stuff
    -> make list of all warnings
    -> try out new logging method
------------------------------------------------------------------------------
else:
    -> change all logs to non deprecated version!
    -> fix all warnings
------------------------------------------------------------------------------
------------------------------------------------------------------------------
------------------------------------------------------------------------------
------------------------------------------------------------------------------
function-declaration------------
FUNCTION [name] : [type of return value]
    VAR
        [var code]
    END_VAR
    [function code]
END_FUNCTION
example-function----------------
FUNCTION SIMPLE_FUN : REAL
    VAR_INPUT
        A : REAL;
        B : REAL;
        C : REAL := 1.0;
    END_VAR
    VAR_IN_OUT
        COUNT : INT;
    END_VAR
    VAR
        COUNTP! : INT;
    END_VAR
    /* wtf is this shit btw? add? fuck you... */
    COUNTP1 := ADD(COUNT,1);
    /* better go for COUNTP1 := COUNT + 1; */
    COUNT   := COUNTP1;
    SIMPLE_FUN := A*B/C;
END_FUNCTION
end-example-function------------
------------------------------------------------------------------------------
